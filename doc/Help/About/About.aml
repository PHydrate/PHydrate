<?xml version="1.0" encoding="utf-8"?>
<topic id="6dd9b648-13b0-4a87-90e2-555c19210b85" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      <para>About PHydrate</para>
    </introduction>
    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="About">
      <title>About PHydrate</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        <para>
        	PHydrate is an Object Relational Mapper (ORM) library for
        	interacting with relational databases in .NET applications.
        </para>
      </content>
    </section>
    <section address="Motivation">
    	<title>Motivation</title>
    	<content>
    		<para>
    			I have come across many projects at my job that benefit from
    			using ORM libraries such as NHibernate (our current ORM of
    			choice). Our DBA has placed a restriction on us that
    			applications may only access the database via stored
    			procedures. I realized that when this restriction is in place,
    			much of NHibernate becomes useless. It no longer needs to
    			generate SQL, and configuration becomes difficult, especially
    			when using tools such as ReSharper.
    		</para>
			<para>
				The goal of this project is to create an ORM that embraces the
				stored procedure paradigm. Instead of creating mapping files
				(or classes, if you use Fluent NHibernate), objects can be
				mapped using attributes. Besides some startup configuration,
				PHydrate will stay out of your code's way.
			</para>
		</content>
    </section>
    <section address="License">
    	<title>License</title>
    	<content>
    		<para>
				PHydrate is free software: you can redistribute it and/or modify
				it under the terms of the GNU Lesser General Public License as published by
				the Free Software Foundation, either version 3 of the License, or
				(at your option) any later version.
			</para>
			<para>
				PHydrate is distributed in the hope that it will be useful,
				but WITHOUT ANY WARRANTY; without even the implied warranty of
				MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
				GNU Lesser General Public License for more details.
			</para>
			<para>
				You should have received a copy of the GNU Lesser General Public License
				along with PHydrate.  If not, see &lt;<externalLink>
					<linkText>http://www.gnu.org/licenses/</linkText>
					<linkUri>http://www.url.com</linkUri>
					<linkTarget>_blank</linkTarget>
				</externalLink>&gt;.
			</para>
			<para>
				Copyright © 2010-2011, Stephen Michael Czetty
			</para>
    	</content>
    </section>
    <relatedTopics>
    	<link xlink:href="b6d48ad9-bf60-4a23-b2b2-ea1324eaa06a"/>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>