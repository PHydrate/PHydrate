<?xml version="1.0" encoding="utf-8" ?>
<!-- This is an example code snippets file -->
<examples>
  <item id="Product.cs#Complete">
    <sampleCode language="CSharp">
		<![CDATA[
using System;
using PHydrate.Attributes;

namespace AdventureWorksLib
{
    [HydrateUsing("GetProduct")]
    public class Product
    {
        [PrimaryKey]
        private int ProductId { get; set; }

        public string Name { get; private set; }

        public string ProductNumber { get; private set; }

        public string Color { get; private set; }

        public decimal StandardCost { get; private set; }

        public decimal ListPrice { get; private set; }

        public string Size { get; private set; }

        public decimal? Weight { get; private set; }

        [Recordset(1)]
        public ProductCategory ProductCategory { get; private set; }

        [Recordset(2)]
        public ProductModel ProductModel { get; private set; }

        public DateTime SellStartDate { get; private set; }

        public DateTime? SellEndDate { get; private set; }

        public DateTime? DiscontinuedDate { get; private set; }

        // Support for VARBINARY(MAX) will be in a future release
        // public Stream ThumbNailPhoto {get ;set; }

        public string ThumbnailPhotoFileName { get; private set; }

        public Guid Rowguid { get; private set; }

        public DateTime ModifiedDate { get; private set; }
    }
}
		]]>
    </sampleCode>
  </item>

  <item id="Product.cs#Initial">
    <sampleCode language="CSharp">
    	<![CDATA[
using System;

namespace AdventureWorksLib
{
    public class Product
    {
        private int ProductId { get; set; }

        public string Name { get; private set; }

        public string ProductNumber { get; private set; }

        public string Color { get; private set; }

        public decimal StandardCost { get; private set; }

        public decimal ListPrice { get; private set; }

        public string Size { get; private set; }

        public decimal? Weight { get; private set; }

        public DateTime SellStartDate { get; private set; }

        public DateTime? SellEndDate { get; private set; }

        public DateTime? DiscontinuedDate { get; private set; }

        public string ThumbnailPhotoFileName { get; private set; }

        public Guid Rowguid { get; private set; }

        public DateTime ModifiedDate { get; private set; }
    }
}
]]>
    </sampleCode>
  </item>
  
  <item id="Product.cs#Basic">
    <sampleCode language="CSharp">
		<![CDATA[
using System;
using PHydrate.Attributes;

namespace AdventureWorksLib
{
    [HydrateUsing("GetProduct")]
    public class Product
    {
        [PrimaryKey]
        private int ProductId { get; set; }

        public string Name { get; private set; }

        public string ProductNumber { get; private set; }

        public string Color { get; private set; }

        public decimal StandardCost { get; private set; }

        public decimal ListPrice { get; private set; }

        public string Size { get; private set; }

        public decimal? Weight { get; private set; }

        public DateTime SellStartDate { get; private set; }

        public DateTime? SellEndDate { get; private set; }

        public DateTime? DiscontinuedDate { get; private set; }

        public string ThumbnailPhotoFileName { get; private set; }

        public Guid Rowguid { get; private set; }

        public DateTime ModifiedDate { get; private set; }
    }
}
		]]>
    </sampleCode>
  </item>
  
  <item id="Product.cs#HydrateUsing">
  	<sampleCode language="CSharp">
  		<![CDATA[
[HydrateUsing("GetProduct")]
public class Product
{

...
]]>
	</sampleCode>
  </item>
  
  <item id="Product.cs#PrimaryKey">
  	<sampleCode language="CSharp">
  		<![CDATA[
[HydrateUsing("GetProduct")]
public class Product
{
    [PrimaryKey]
    private int ProductId { get; set; }
    
...
]]>
	</sampleCode>
  </item>
  
  <item id="Program.cs#Complete">
  	<sampleCode language="CSharp">
  		<![CDATA[
using System;
using System.Linq;
using AdventureWorksLib;
using PHydrate;
using PHydrate.Core;

namespace PHydrateDemo
{
    class Program
    {
        static void Main(string[] args)
        {
            IDatabaseService sqlServerDatabaseService = new SqlServerDatabaseService(
                @"Data Source=localhost\consulting;Initial Catalog=AdventureWorksLT2008;Integrated Security=SSPI");

            ISessionFactory sessionFactory =
                Fluently.Configure.Database(
                    sqlServerDatabaseService)
                    .BuildSessionFactory();

            ISession session = sessionFactory.GetSession();

            Product product = session.Get<Product>(x => x.ProductNumber == "FR-R92B-58").FirstOrDefault();

            Console.WriteLine(product.ToString());

            Console.WriteLine("Press any key to exit...");
            Console.ReadKey();
        }
    }
}
]]>
	  </sampleCode>
	</item>
	
  <item id="Program.cs#GetFactory">
  	<sampleCode language="CSharp">
  		<![CDATA[
IDatabaseService sqlServerDatabaseService = new SqlServerDatabaseService(
    @"Data Source=localhost;Initial Catalog=AdventureWorksLT2008;Integrated Security=SSPI");

ISessionFactory sessionFactory =
    Fluently.Configure.Database(sqlServerDatabaseService)
        .BuildSessionFactory();
]]>
	  </sampleCode>
	</item>
	
	<item id="Program.cs#GetInstance">
		<sampleCode language="CSharp">
			<![CDATA[
ISession session = sessionFactory.GetSession();

Product product = session.Get<Product>(x => x.ProductNumber == "FR-R92B-58").FirstOrDefault();
]]>
		</sampleCode>
	</item>
</examples>

