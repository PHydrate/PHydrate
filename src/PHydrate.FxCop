<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="10.0" Name="My FxCop Project">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">$(FxCopDir)\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded, Good, Noise" NewOnly="False" />
   <Report Status="Active, Good, Noise" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/PHydrate/bin/Debug/PHydrate.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityTransparencyRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="10.0">
  <Targets>
   <Target Name="$(ProjectDir)/PHydrate/bin/Debug/PHydrate.dll">
    <Modules>
     <Module Name="phydrate.dll">
      <Messages>
       <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Created="2011-03-04 19:11:05Z">
        <Issue Name="NoStrongName">
         <Item>'PHydrate.dll'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="PHydrate">
        <Types>
         <Type Name="IDbSpecification`1">
          <Messages>
           <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-03-04 19:11:05Z">
            <Issue Name="Type">
             <Item>Db</Item>
             <Item>'IDbSpecification&lt;T&gt;'</Item>
             <Item>DB</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Criteria">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2011-03-04 19:11:05Z">
              <Issue>
               <Item>'IDbSpecification&lt;T&gt;.Criteria'</Item>
               <Item>'Expression&lt;Func&lt;T, bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ISession">
          <Members>
           <Member Name="#Get`1(PHydrate.ISpecification`1&lt;!!0&gt;)">
            <Messages>
             <Message Id="Get" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2011-03-04 19:11:05Z">
              <Issue Name="Member">
               <Item>'ISession.Get&lt;T&gt;(ISpecification&lt;T&gt;)'</Item>
               <Item>Get</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Get`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,System.Boolean&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2011-03-04 19:11:05Z">
              <Issue>
               <Item>'ISession.Get&lt;T&gt;(Expression&lt;Func&lt;T, bool&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T, bool&gt;&gt;'</Item>
              </Issue>
             </Message>
             <Message Id="Get" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2011-03-04 19:11:05Z">
              <Issue Name="Member">
               <Item>'ISession.Get&lt;T&gt;(Expression&lt;Func&lt;T, bool&gt;&gt;)'</Item>
               <Item>Get</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ISessionFactory">
          <Members>
           <Member Name="#GetSession()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2011-03-04 19:11:05Z">
              <Issue Certainty="50">
               <Item>'ISessionFactory.GetSession()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ISpecification`1">
          <Messages>
           <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Created="2011-03-04 19:11:05Z">
            <Issue>
             <Item>'ISpecification&lt;T&gt;'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="PHydrateException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2011-03-04 19:11:05Z">
            <Issue Name="MissingConstructor">
             <Item>'PHydrateException'</Item>
             <Item>protected PHydrateException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PHydrateException'</Item>
             <Item>public PHydrateException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PHydrateException'</Item>
             <Item>public PHydrateException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2011-03-04 19:11:05Z">
            <Issue Certainty="95" Level="Error">
             <Item>'PHydrateException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String,System.String[])">
            <Messages>
             <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2011-03-04 19:11:05Z">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'PHydrateException.PHydrateException(string, params string[])'</Item>
               <Item>String</Item>
               <Item>'formatString'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2011-03-04 19:11:05Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'PHydrateException.PHydrateException(string, params string[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PHydrateInternalException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2011-03-04 19:11:05Z">
            <Issue Name="MissingConstructor">
             <Item>'PHydrateInternalException'</Item>
             <Item>protected PHydrateInternalException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PHydrateInternalException'</Item>
             <Item>public PHydrateInternalException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PHydrateInternalException'</Item>
             <Item>public PHydrateInternalException(String, Exception)</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String,System.String[])">
            <Messages>
             <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2011-03-04 19:11:05Z">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'PHydrateInternalException.PHydrateInternalException(string, params string[])'</Item>
               <Item>String</Item>
               <Item>'formatString'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2011-03-04 19:11:05Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'PHydrateInternalException.PHydrateInternalException(string, params string[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="PHydrate.Core">
        <Types>
         <Type Name="DatabaseServiceBase">
          <Members>
           <Member Name="#GetDatabaseConnection()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2011-03-04 19:11:05Z">
              <Issue Certainty="50">
               <Item>'DatabaseServiceBase.GetDatabaseConnection()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IDatabaseService">
          <Members>
           <Member Name="#ExecuteStoredProcedureReader(System.String,System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.String,System.Object&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2011-03-04 19:11:05Z">
              <Issue>
               <Item>'IDatabaseService.ExecuteStoredProcedureReader(string, IEnumerable&lt;KeyValuePair&lt;string, object&gt;&gt;)'</Item>
               <Item>'IEnumerable&lt;KeyValuePair&lt;string, object&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ExecuteStoredProcedureScalar`1(System.String,System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.String,System.Object&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2011-03-04 19:11:05Z">
              <Issue>
               <Item>'IDatabaseService.ExecuteStoredProcedureScalar&lt;T&gt;(string, IEnumerable&lt;KeyValuePair&lt;string, object&gt;&gt;)'</Item>
               <Item>'IEnumerable&lt;KeyValuePair&lt;string, object&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Session">
          <Messages>
           <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Created="2011-03-14 14:48:14Z">
            <Issue Name="ProvideDisposeBool">
             <Item>'Session'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Dispose()">
            <Messages>
             <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Created="2011-03-14 14:48:14Z">
              <Issue Name="NotCalled">
               <Item>'Session.Dispose()'</Item>
               <Item>'GC.SuppressFinalize(object)'</Item>
              </Issue>
             </Message>
             <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Created="2011-03-14 14:48:14Z">
              <Issue Name="DisposeImplementation">
               <Item>'Session.Dispose()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FilterUsingExplicitSpecification`1(PHydrate.ISpecification`1&lt;!!0&gt;,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2011-03-04 19:11:05Z">
              <Issue Name="Parameter">
               <Item>'specification'</Item>
               <Item>'IExplicitSpecification&lt;T&gt;'</Item>
               <Item>'Session.FilterUsingExplicitSpecification&lt;T&gt;(ISpecification&lt;T&gt;, IEnumerable&lt;T&gt;)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Get`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,System.Boolean&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2011-03-04 19:11:05Z">
              <Issue>
               <Item>'Session.Get&lt;T&gt;(Expression&lt;Func&lt;T, bool&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T, bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetItemsFromDbSpecification`1(PHydrate.ISpecification`1&lt;!!0&gt;)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2011-03-04 19:11:05Z">
              <Issue Name="Parameter">
               <Item>'specification'</Item>
               <Item>'IDbSpecification&lt;T&gt;'</Item>
               <Item>'Session.GetItemsFromDbSpecification&lt;T&gt;(ISpecification&lt;T&gt;)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Transaction">
            <Accessors>
             <Accessor Name="#get_Transaction()">
              <Messages>
               <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2011-03-04 19:11:05Z" FixCategory="Breaking">
                <Issue Name="PropertyGetter" Level="Warning">
                 <Item>'Session.Transaction.get()'</Item>
                 <Item>'NotImplementedException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="SessionFactory">
          <Members>
           <Member Name="#GlobalTransaction">
            <Accessors>
             <Accessor Name="#get_GlobalTransaction()">
              <Messages>
               <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2011-03-04 19:11:05Z" FixCategory="Breaking">
                <Issue Name="PropertyGetter" Level="Warning">
                 <Item>'SessionFactory.GlobalTransaction.get()'</Item>
                 <Item>'NotImplementedException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="WeakReferenceObjectCache">
          <Members>
           <Member Name="#CopyTo(System.Object[],System.Int32)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2011-03-04 19:11:05Z">
              <Issue Name="NoArguments">
               <Item>'ArgumentException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="PHydrate.Util">
        <Types>
         <Type Name="DictionaryExtensions">
          <Members>
           <Member Name="#ContainsKeyNoCase`1(System.Collections.Generic.IDictionary`2&lt;System.String,!!0&gt;,System.String,System.String&amp;)">
            <Messages>
             <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Created="2011-03-04 19:11:05Z">
              <Issue>
               <Item>'actualName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ExpressionExtensions">
          <Members>
           <Member Name="#GetDataParameters`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,System.Boolean&gt;&gt;,System.String)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2011-03-04 19:11:05Z">
              <Issue>
               <Item>'ExpressionExtensions.GetDataParameters&lt;T&gt;(this Expression&lt;Func&lt;T, bool&gt;&gt;, string)'</Item>
               <Item>'Expression&lt;Func&lt;T, bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="GenericExtensions">
          <Members>
           <Member Name="#DBNullToDefault`1(System.Object)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2011-03-14 16:39:12Z">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'GenericExtensions.DBNullToDefault&lt;T&gt;(this object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ExecuteGenericMethod`1(!!0,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,System.Object&gt;&gt;,System.Type)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2011-03-04 19:11:05Z">
              <Issue>
               <Item>'GenericExtensions.ExecuteGenericMethod&lt;TSource&gt;(this TSource, Expression&lt;Func&lt;TSource, object&gt;&gt;, Type)'</Item>
               <Item>'Expression&lt;Func&lt;TSource, object&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetDataParameters`1(!!0,System.String)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2011-03-04 19:11:05Z">
              <Issue>
               <Item>'GenericExtensions.GetDataParameters&lt;T&gt;(this T, string)'</Item>
               <Item>'IEnumerable&lt;KeyValuePair&lt;string, object&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyValuesWithAttribute`1(System.Object)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2011-03-04 19:11:05Z">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'GenericExtensions.GetPropertyValuesWithAttribute&lt;TAttributeType&gt;(this object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IMemberInfo">
          <Members>
           <Member Name="#GetValue(System.Object)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2011-03-14 14:48:14Z">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'IMemberInfo.GetValue(object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetValue(System.Object,System.Object)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2011-03-14 14:48:14Z">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'IMemberInfo.SetValue(object, object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MemberInfoExtensions">
          <Members>
           <Member Name="#GetLookupHash`1(PHydrate.Util.IMemberInfo,System.Object,System.String[])">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2011-03-14 14:48:14Z">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'MemberInfoExtensions.GetLookupHash&lt;T&gt;(this IMemberInfo, object, params string[])'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TypeExtensions">
          <Members>
           <Member Name="#ExecuteGenericMethod`2(System.Type,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;,System.Object[])">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2011-03-04 19:11:05Z">
              <Issue>
               <Item>'TypeExtensions.ExecuteGenericMethod&lt;TSource, TReturn&gt;(this Type, Expression&lt;Func&lt;TSource, TReturn&gt;&gt;, params object[])'</Item>
               <Item>'Expression&lt;Func&lt;TSource, TReturn&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
    <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   </Rule>
   <Rule TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040">
    <Resolution Name="Default">Define a custom attribute to replace {0}.</Resolution>
   </Rule>
   <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
    <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   </Rule>
   <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
    <Resolution Name="NotCalled">Change {0} to call {1}. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
    <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   </Rule>
   <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
    <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
    <Resolution Name="PropertyGetter">{0} creates an exception of type {1}, an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
    <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
    <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
    <Resolution Name="Member">Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
   </Rule>
   <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
    <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
    <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   </Rule>
   <Rule TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032">
    <Resolution Name="MissingConstructor">Add the following constructor to {0}: {1}.</Resolution>
   </Rule>
   <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
    <Resolution Name="NoArguments">Call the {0} constructor that contains a message and/or paramName parameter.</Resolution>
   </Rule>
   <Rule TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237">
    <Resolution Name="Default">Add [Serializable] to {0} as this type implements ISerializable.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   </Rule>
   <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
    <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
