<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.Platform.ReSharper.ProjectModel</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ProjectModel.AssemblyReferenceResolver">
            <summary>
            Global component that manages resolution of assembly references, i.e. mapping between assembly references 
            and assembly files in the file system
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.Build.IBuildSettings">
            <summary>
            Common build settings for all projects
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.Build.IProjectConfiguration.Copy">
            <summary>
            Copies the entire configuration
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.Build.IProjectConfiguration.Project">
            <summary>
            Project which the configuration belongs to
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.Build.IProjectConfiguration.Name">
            <summary>
            Name of the configuration
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.Build.IProjectConfiguration.OutputDirectory">
            <summary>
            Output path of the configuration, i.e. path where output files are placed
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.BuildAction">
            <summary>
            Describes what happens with a project file during build
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.FileSetSet.GetBasePaths">
            <summary>
            Returns the root directory of all include patterns
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.IModule">
            <summary>
            Common interface for <see cref="T:JetBrains.ProjectModel.IProject"/> and <see cref="T:JetBrains.ProjectModel.IAssembly"/>
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.IProjectModelElement">
            <summary>
            Handy root interface for all object of ProjectModel
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProjectModelElement.GetProperty(JetBrains.Util.Key)">
            <summary>
            Retrieves the value of a property given the property's name
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IAssembly.IsMissing">
            <summary>
            Indicates that the persistent version of the assembly is not found
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IAssemblyFile.LastWriteTime">
            <summary>
            Time of last modification of the corresponding file on the file system.
            Note that this value is cached and is updated only when the synchronization with the file system is performed.
            That is, the value returned by this method may sometimes differ from the actual modification stamp of the physical file,
            if the file was modified since last synchronization with the file system.
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.IProjectElement">
            <summary>
            Root interface for all objects associated with a project
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProjectElement.GetPersistentID">
            <summary>
            Returns persistent ID of the project element. This ID remains valid between sessions,
            but does not survive after renaming or moving the element.
            </summary>
            <returns></returns>
        </member>
        <member name="P:JetBrains.ProjectModel.IProjectElement.IsValid">
            <summary>
            Returns true if the project item is a member of a project hierarchy
            Otherwise (e.g. the item or an its ancestor has been deleted), returns false
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.Impl.ExternalChangeProcessor.MyStatusBarIndicator.ShouldBeVisible">
            <summary>
            Gets or sets whether the indicator should be visible. Shows or hides the indicator with a delay, to avoid flickering.
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.Impl.Assembly">
            <summary>
            Represents loaded resolved assembly reference.
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.Platforms.Impl.PlatformManagerImpl.LookForWindowsSdk">
            <summary>
            Tries to find Windows SDK v6 or higher and returns the path to its Bin folder, or <c>Null</c> if not found.
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.ProjectFactory">
            <summary>
            Factory for constructing projects outside of solution
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.Impl.ProjectItemBase">
            <summary>
            Base class for project item implementations
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.IProjectItem">
            <remarks>
            Interface to a project item. Project item is a member of a project's hierarchy
            </remarks>
        </member>
        <member name="P:JetBrains.ProjectModel.IProjectItem.IsLinked">
            <summary>
            Returns true if the project item is linked to its parent folder. This means that the persistent version
            of the item is not located in the persistent version of the parent folder.
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.IProjectFile">
            <summary>
            Represents a file in a project
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProjectFile.MarkReconciledWithInMemoryVersion">
            <summary>
            Marks the file as reconciled, i.e. its persistent and in-memory version are identical, by assigning its external version timestamp the same value as of the in-memory version
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProjectFile.MarkReconciledWithExternalVersion">
            <summary>
            Marks the file as reconciled, i.e. its persistent and in-memory version are identical, by assigning its in-memory version timestamp the same value as of the external version
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProjectFile.CreateReadStream">
            <summary>
            Create new read-only stream for this file
            Don't forget to dispose it!
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProjectFile.CreateWriteStream">
            <summary>
            Creates new writable stream for this file
            Don't forget to dispose it! 
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IProjectFile.LanguageType">
            <summary>
            Language in which the file is written
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IProjectFile.LastInMemoryModificationStamp">
            <summary>
            Timestamp corresponding to the last in-memory modification
            </summary>
            <remarks>Equals to the LastExternalModificationStamp if the file has not been modified in memory</remarks>
        </member>
        <member name="P:JetBrains.ProjectModel.IProjectFile.LastExternalModificationStamp">
            <summary>
            Timestamp corresponding to the last external modification
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IProjectFile.LastWriteTime">
            <summary>
            Time of last modification of the corresponding file on the file system.
            Note that this value is cached and is updated only when the synchronization with the file system is performed.
            That is, the value returned by this method may sometimes differ from the actual modification stamp of the physical file,
            if the file was modified since last synchronization with the file system.
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IProjectFile.IsWritable">
            <summary>
            Checks if the persistent version of the file is writable
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IProjectFile.IsMissing">
            <summary>
            Checks if the persistent version of the file does not exist
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IProjectFile.HasChangedExternallySinceLastReconciliation">
            <summary>
            Indicates that the persistent version of the file has changed externally since the last reconciliation
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IProjectFile.HasChangedInMemorySinceLastReconciliation">
            <summary>
            Indicates that the in-memory version of the file has changed since the last reconciliation
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.Impl.ProjectFileSynchronizer">
            <summary>
            Propagates changes made to the project tree into the project file
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.IProjectFolder">
            <summary>
            Represents a folder in a project
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProjectFolder.IsPathIncluded(JetBrains.Util.FileSystemPath)">
            <summary>
            Determines if the specified location matches the folder's include and exclude patterns
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProjectFolder.CreateFile(JetBrains.Util.FileSystemPath)">
            <summary>
            Adds specified file to the project 
            </summary>
            <param name="location">Path to the file being added</param>
            <returns>Reference to the new project item</returns>
        </member>
        <member name="M:JetBrains.ProjectModel.IProjectFolder.CreateFolder(System.String)">
            <summary>
            Adds a directory to the project
            </summary>
            <param name="Name">Name of the directory being added</param>
            <returns>Reference to the new project item</returns>
        </member>
        <member name="T:JetBrains.ProjectModel.IProject">
            <remarks>
            Interface to a project
            </remarks>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.Open">
            <summary>
            Opens a project
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.GetAssemblyReferences">
            <summary>
            All assemblies referenced in the project
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.GetProjectReferences">
            <summary>
            All projects referenced in the project
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.GetModuleReferences">
            <summary>
            All assembly and project references
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.GetModuleReference(System.String)">
            <summary>
            Retrieves module reference by the module name
            </summary>
            <remarks>It is assumed that the name uniquely identifies the module among referenced modules (both projects and assemblies)</remarks>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.AddModuleReference(JetBrains.ProjectModel.IModule)">
            <summary>
            Makes the project reference the specified module
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.AddAssemblyReference(System.Reflection.AssemblyName)">
            <summary>
            Adds assembly with the specified name to the project's references
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.AddAssemblyReference(System.String)">
            <summary>
            Adds the specified library to the project's references
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.AddProjectReference(JetBrains.ProjectModel.IProject)">
            <summary>
            Adds the specified project to the project's references
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.RemoveModuleReference(JetBrains.ProjectModel.IModuleReference)">
            <summary>
            Removes the specified library from project's references
            </summary>
            <param name="reference"></param>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.RemoveProjectReference(JetBrains.ProjectModel.IProject)">
            <summary>
            Removes the specified project from project's references. Does nothing if the project does not reference the specified project
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.ResolveModuleReferences">
            <summary>
            Forces resolve of module references. 
            </summary>
            <remarks>Should be invoked after changes that might affect reference resolution (e.g. ReferencePathProperty)</remarks>
        </member>
        <member name="M:JetBrains.ProjectModel.IProject.FindProjectItemByLocation(JetBrains.Util.FileSystemPath)">
            <summary>
            Returns project item, if any, at the given location
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IProject.PlatformID">
            <summary>
            The platform to which the project is targeted
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IProject.LanguageType">
            <summary>
            Language type of sources of the project
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IProject.ProjectFile">
            <summary>
            Returns project item representing the project file
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.IProject.IsWritable">
            <summary>
            Indicates whether the structure of the project or properties of its items can be modified
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.Impl.ProjectImpl.TryGetComponent``1">
            <summary>
            Gets the component whose interface type is <typeparamref name="TInterface"/>.
            Returns <c>Null</c> if there is no such component.
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.Impl.ProjectImpl.TryGetComponent(System.Type)">
            <summary>
            Gets the component whose interface type is <paramref name="componentInterfaceType"/>.
            Returns <c>Null</c> if there is no such component.
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.ProjectModelIconManager.GetFileImage(JetBrains.ProjectModel.IProjectFile)">
            <summary>
            Gets image for project file
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.ProjectModelIconManager.GetDirectoryImage">
            <summary>
            Get the image for the directory
            </summary>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ProjectModel.ProjectModelIconManager.GetAssemblyImage">
            <summary>
            Gets image for the assembly
            </summary>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ProjectModel.ProjectModelIconManager.GetProjectModelElementImage(JetBrains.ProjectModel.IProjectModelElement)">
            <summary>
            Gets image for given project item
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.ProjectModelIconManager.RegisterImage(JetBrains.ProjectModel.ProjectFileType,System.Drawing.Image)">
            <summary>
            Register file image
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.ISolution">
            <summary>
            Solution is a group of related projects
            </summary>
        </member>
        <member name="E:JetBrains.ProjectModel.ISolution.MakingWritable">
            <summary>
            Raised when files are needed to make writable. The handlers of this event must ensure that the documents are
            really writable.
            </summary>
        </member>
        <member name="E:JetBrains.ProjectModel.ISolution.FailedToMakeWritable">
            <summary>
            Raised after an attempt to make some files writable. 
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.ISolution.IsWritable">
            <summary>
            Indicates that the structure of the solution, the properties of the solution and the properties of the solution items
            can be modifed
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.ISolution.IsTemporary">
            <summary>
            Indicates if the solution has not been persisted
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.ISolution.IsOpened">
            <summary>
            Indicates if the solution was opened
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.ISolution.IsValid">
            <summary>
            Returns if the solution is among the solutions in the SolutionManager
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.Impl.SolutionBase.SolutionSettingsPath(JetBrains.ProjectModel.ISolution,JetBrains.ComponentModel.XmlExternalizationScope)">
            <summary>
            Gets the full path for the solution settings file, which includes the product version now.
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.Impl.SolutionBase.GetSolutionSettingsFileSuffix(JetBrains.ComponentModel.XmlExternalizationScope)">
            <summary>
            Suffix for the solution settings file (the trailing extensions), scope-dependent, leading dot included.
            Usually, <c>".resharper.user"</c> and <c>".resharper"</c>
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.Impl.SolutionBase.GetSettingsDocument(JetBrains.ComponentModel.XmlExternalizationScope)">
            <summary>
            Looks for either the current or legacy solution settings.
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.Impl.SolutionBase.GetSettingsDocument_LegacyVersion(JetBrains.ComponentModel.XmlExternalizationScope)">
            <summary>
            Looks for the solution settings from the previous version of R#.
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.Impl.SolutionManagerBase.HandleCreateFile(JetBrains.ProjectModel.Impl.ProjectFolderImpl,JetBrains.Util.FileSystemPath,JetBrains.ProjectModel.IProjectFile@)">
            <summary>
            Implementing these functions gets manager a chance to control file behavior. 
            </summary>
            <returns>Result of the modification, if the manager has handled modification; null, otherwise</returns>
        </member>
        <member name="T:JetBrains.ProjectModel.ITransaction">
            <summary>
            Represents atomic operation on project model
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.ProjectModelComponentDeclarationsCache">
            <summary>
            Caches component declarations for Solution and Project components.
            The lifetime of the cache must be synchronized with the Shell lifetime, as with new shell a new AllAssemblies set might come, hence new set of component declarations (especially important in tests).
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.ProjectModelComponentDeclarationsCache.myProjectComponentDeclarationsCache">
            <summary>
            <see cref="P:JetBrains.ProjectModel.ProjectModelComponentDeclarationsCache.ProjectComponentDeclarationsCache"/>.
            Must be lazy-init, costly ctor.
            </summary>
        </member>
        <member name="F:JetBrains.ProjectModel.ProjectModelComponentDeclarationsCache.mySolutionComponentDeclarationsCache">
            <summary>
            <see cref="P:JetBrains.ProjectModel.ProjectModelComponentDeclarationsCache.SolutionComponentDeclarationsCache"/>.
            Must be lazy-init, costly ctor.
            </summary>
        </member>
        <member name="M:JetBrains.ProjectModel.ProjectModelComponentDeclarationsCache.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:JetBrains.ProjectModel.ProjectModelComponentDeclarationsCache.ProjectComponentDeclarationsCache">
            <summary>
            Declarations cache for the Project components.
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.ProjectModelComponentDeclarationsCache.SolutionComponentDeclarationsCache">
            <summary>
            Declarations cache for the Solution components.
            </summary>
        </member>
        <member name="P:JetBrains.ProjectModel.ProjectModelElementEnvoy.Text">
            <summary>
            Gets presentation text for project item, as was last generated via <see cref="M:JetBrains.ProjectModel.ProjectModelElementEnvoy.Present``1(JetBrains.UI.TreeView.StructuredPresenter{``0,JetBrains.CommonControls.IPresentableItem},``0,JetBrains.CommonControls.IPresentableItem,JetBrains.UI.TreeView.PresentationState)"/>
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.ProjectOutputType">
            <summary>
            Type of the output assembly according to C# compiler options
            </summary>
        </member>
        <member name="T:JetBrains.ProjectModel.SpecialFilesManager">
            <summary>
            Provides a reference-counter based mechanism for keeping non-project items
            </summary>
        </member>
    </members>
</doc>
