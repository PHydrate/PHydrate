<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.CodeInsight.Services</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.CodeCompletionSettings">
            <summary>
            Maintains code completion options
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.CodeCompletionSettings.HighlightImmediateMembers">
            <summary>
            Note: this property is no more configurable thru the UI.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.CodeCompletionType">
            <summary>
            Defines possible code completion types
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.CodeCompletionUtil.IterateStaticMembers(JetBrains.ReSharper.Psi.ITypeElement,JetBrains.ReSharper.Psi.Resolve.ISubstitution,JetBrains.ReSharper.Psi.Tree.IElement,System.Collections.Generic.IEnumerable{JetBrains.ReSharper.Psi.ExpectedTypes.ExpectedType})">
            <summary>
            Enumerate static members in given type element, which type is given, and which are visible from given source point
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.CompletionStatisticsManager">
            <summary>
            Tracks statistics of choosing members in completion.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.CompletionStatisticsManager.PriorityStringList">
            <summary>
            Represents the list with priorities. It is sorted by priorities.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.CompletionStatisticsManager.PriorityStringList.myPriorities">
            <summary>
            Maps items to their priorities
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.CompletionStatisticsManager.PriorityStringList.IncreasePriority(System.String)">
            <summary>
            Increases priority of the specified item by 1
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.ICodeCompletionServiceProvider.IsAvailable(JetBrains.ProjectModel.ISolution,JetBrains.TextControl.ITextControl,JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.CodeCompletionType)">
            <summary>
            Checks if the given code completion is available at this point
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.ICodeCompletionServiceProvider.Execute(JetBrains.ProjectModel.ISolution,JetBrains.TextControl.ITextControl,JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.CodeCompletionType,JetBrains.ReSharper.CodeInsight.Services.Lookup.CompletionHandler)">
            <summary>
            Execute given code completion
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.SmartCompletionPolicy">
            <summary>
            Completion policy for smart completion. Takes into account name corellation, etc.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.StatisticalCompletionPolicy">
            <summary>
            Completion suggestion policy based on statistics
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Comment.IBlockCommentActionProvider.GetBlockComment(JetBrains.ReSharper.Psi.Parsing.CachingLexer)">
            <summary>
            Identifies block comment range, even if it is not a single token.
            Lexer pos will be saved and resored by the caller
            </summary>
            <param name="lexer"></param>
            <returns>Invalid range if lexer is not positioned in block comment</returns>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase">
            <summary>
            Class for implementing advanced lookup items
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem">
            <summary>
            Represents a lookup item
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.GetCompleteSingleItem(JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupContext)">
            <summary>
            Gets flag indicating whether this item should be automatically completed if it is the only in a list
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.Shrink">
            <summary>
            Shrinks lookup item presentation
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.CancelShrink">
            <summary>
            Restores unshrinked lookup item presentation
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.MatchesPrefix(System.String,System.Boolean)">
            <summary>
            Returns value indicating whether the item matches a given prefix
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.UpdatePresentation(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange)">
            <summary>
            Update presentation fields for the item. This is only used for items which return <c>true</c> as a result of <see cref="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.ChangesPresentation"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.Complete(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange,JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemInsertType,JetBrains.ReSharper.CodeInsight.Services.Lookup.Suffix,JetBrains.ProjectModel.ISolution,System.Boolean)">
            <summary>
            Completes the item at the specified range.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.GetVisualReplaceRange(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange)">
            <summary>
            Gets visual replace range
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.Image">
            <summary>
            Gets lookup item image
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.DisplayName">
            <summary>
            Gets lookup item display name
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.DisplayTypeName">
            <summary>
            Gets type display name 
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.TypeInName">
            <summary>
            Gets lookup item type-in name
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.SortingDisplayText">
            <summary>
            Gets string using to arrange items in lookup list. If it is null, <see cref="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.DisplayName"/> is used.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.CanShrink">
            <summary>
            Determines whether the item can decrease its width
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem.ChangesPresentation">
            <summary>
            Determines whether the item can change its presentation in the course of lookup lifecycle
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myDisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myDisplayTypeName">
            <summary>
            Display type name
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myInsertCaretOffset">
            <summary>
            Caret offset in insert mode
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myInsertRange">
            <summary>
            Range to be replaced in insert mode
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myInsertText">
            <summary>
            Text to insert in insert mode
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myIsInitialized">
            <summary>
            Indicates whether the item is already initialized
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myReplaceCaretOffset">
            <summary>
            Caret offset in replace mode
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myReplaceRange">
            <summary>
            Range to be replaced in replace mode
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myReplaceText">
            <summary>
            Text to insert in replace mode
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myTailType">
            <summary>
            Item tail type
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myTypeInName">
            <summary>
            Type-in name
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.myVisualReplaceRangeMarker">
            <summary>
            Visual replace range
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.Shrink">
            <summary>
            Shrinks the name of the item
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.CancelShrink">
            <summary>
            Cancels shrink of the name
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.Complete(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange,JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemInsertType,JetBrains.ReSharper.CodeInsight.Services.Lookup.Suffix,JetBrains.ProjectModel.ISolution,System.Boolean)">
            <summary>
            Completes the item at the specified range.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.OnInitialize">
            <summary>
            Called when display and type-in information is first really needed
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.TailType">
            <summary>
            Adds a decorator
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.DisplayName">
            <summary>
            Display name of the item
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.Image">
            <summary>
            Gets item image
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.TypeInName">
            <summary>
            The string which prepresents the type-in sequence for this item
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemBase.DisplayTypeName">
            <summary>
            Name of the type
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemPainter">
            <summary>
            Paints code completion items
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemPainter.myItems">
            <summary>
            List of items
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemPainter.myListBoxControl">
            <summary>
            The list box to use
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemPainter.myLeftAlign">
            <summary>
            The flag indicating whether to align types to the left
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemPainter.myMaxNameWidth">
            <summary>
            Maximum left size width
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemPainter.myItemHeight">
            <summary>
            Item height (should be same for all items)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemPainter.myRenderParams">
            <summary>
            The lookup item text rendering aspect.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemPainter.ShrinkLookupListItemNameToWidth(JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupListItem,System.Int32,System.Drawing.Graphics)">
            <summary>
            Shrinks name text to the given width.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemPainter.LeftAlign">
            <summary>
            Gets or sets the left align flag
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemPainter.RenderParams">
            <summary>
            Gets the rendering aspect for the lookup list items.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow">
            <summary>
            UI-related part of lookup form
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupWindow.CurrentItemBounds">
            <summary>
            Gets bounds of the current item, in client coordinates.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupWindow.Bounds">
            <summary>
            Gets bounds of the window
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupWindow.BeforeWindowShown">
            <summary>
            Event which is raised immediately before the lookup window is shown
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupWindow.AfterWindowShown">
            <summary>
            Event which is raised immediately after the lookup window is shown
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupWindow.BeforeWindowClosed">
            <summary>
            Event which is raised before the lookup window closes
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupWindow.Scrolled">
            <summary>
            Event which is raised when lookup window is scrolled
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.MagicalOffsetConstant">
            <summary>
            A magical offset to be added to the lookup form. Presumably, accomodates for some gaps, intercolumn spacing, in-item padding and so on.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.myWantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.myFocusAlarm">
            <summary>
            Alarm for handling focus transitions
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.myLookupListItemsCache">
            <summary>
            Caches lookup list items created for lookup items. This allows caching size for them in list item painter.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.myIsGettingFocus">
            <summary>
            Service flag for controlling focus transition
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.InvokeScrolled">
            <summary>
            Fires the <see cref="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.Scrolled"/> event.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.SetLayout(JetBrains.UI.LayoutResult)">
            <summary>
            Tells the control the details about the new layout applied to it by the controlling entity in conjunction with some <see cref="T:JetBrains.UI.IPopupLayouter"/>.
            Typically, the control need not apply the given size and location because that should be done by the controlling entity.
            The control may change its presentation in response to the layouting details, for example, whether it's attached to the top or the bottom of the anchoring rect.
            </summary>
            <param name="layout">The layouting details.</param>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.GetDesiredSize(JetBrains.UI.IGraphicsContainer,System.Drawing.Size)">
            <summary>
            Performs the bottom-up layouting stage, when the control calculates its desired size using the given constraints.
            Should give generally the same results as <see cref="T:JetBrains.CommonControls.IConstrainableControl"/>, but could employ the <paramref name="gc"/> device context for the sake of optimization.
            </summary>
            <param name="gc">The device context to measure against.</param>
            <param name="limit">The maximum available space (that could affect the shape of the control, or strip down unnecessary calculations over the invisible items).
            May be a <see cref="T:System.Drawing.Size"/> with width and height equal to <see cref="F:System.Int32.MaxValue"/>, which means that the size is not limited.</param>
            <returns>The desired size, must be no larger than <paramref name="limit"/>.</returns>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.Scrolled">
            <summary>
            Event which is raised when lookup window is scrolled
            </summary> 
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.BeforeShownItemsUpdated">
            <summary>
            Event is raised before items list is shown
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.CurrentItemBounds">
            <summary>
            Gets bounds of the current item
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.WantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.AutoActivate">
            <summary>
            Gets or sets whether the control should be activated initially when it's shown.
            The typical implementation for a form is to return a negative of this value from the <see cref="P:System.Windows.Forms.Form.ShowWithoutActivation"/> override.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindow.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            
            <returns>
            True if the window will not be activated when it is shown; otherwise, false. The default is false.
            </returns>
            
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.MethodsLookupItem">
            <summary>
            Code completion item which consists of several methods
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoProvidingLookupItem">
            <summary>
            Interface for providing parameter info contexts from lookup lists or other places
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupListItem.myNameText">
            <summary>
            The rich presentation of name
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupListItem.myTypeText">
            <summary>
            Rich presentation of the type
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupListItem.myItem">
            <summary>
            The associated context item
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupListItem.myImage">
            <summary>
            The image
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupListItem.CancelShrink">
            <summary>
            Cancels all shrinks
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupListItem.Shrink">
            <summary>
            Shrinks the name a bit.
            </summary>
            <returns>Whether there was any shrinking. The <see cref="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupListItem.RichText"/> width must decrease if <c>True</c>.</returns>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.TextLookupItem">
            <summary>
            Code completion result item which simply completes some text
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.TypeLookupItem">
            <summary>
            Lookup item for type
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.TypeNameCodeCompletionLookupItem">
            <summary>
            Code completion result item for type name completion
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.DeclaredElementLookupItem">
            <summary>
            Declared element code completion context item
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.DeclaredElementLookupItem.myPointer">
            <summary>
            The element information
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.DeclaredElementLookupItem.myLanguageType">
            <summary>
            Declared element presentation language
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.DeclaredElementLookupItem.myPrefix">
            <summary>
            Declared element prefix
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.DeclaredElementLookupItem.myHighlight">
            <summary>
            Whether the name should be highlighted
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.DeclaredElementLookupItem.myAlias">
            <summary>
            Alias presentation. If not <c>null</c>, then it should be used for presentation instead of the <see cref="T:JetBrains.ReSharper.Psi.DeclaredElementPresenter"/>
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.DeclaredElementLookupItem.PreferredDeclaredElement">
            <summary>
            Gets the declared element info
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.VariableComparer">
            <summary>
            Comparer which prefers local variables to fields and properties. 
            Note that for preference policy the "0" return value doesn't
            mean that items are equal - it means that the comparer can say nothing about the items.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters">
            <summary>
            A class that implements the coupled layouters for the lookup window and parameter info tooltip.
            Create a new layouter through the <see cref="P:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.TextControls"/> property.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.myInstances">
            <summary>
            The currently active instances for different text controls.
            It's unclear whether there may be more than one at a time, but the decision was to generally allow for it ;-)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.myTextControl">
            <summary>
            <see cref="P:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.TextControl"/>.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.myAnchors">
            <summary>
            Anchoring rectangles for the coupled layouters.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.myLayouters">
            <summary>
            The coupled layouters controlled by this instance.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.myDispositions">
            <summary>
            Stores the sticky dispositions for layouting each of the entities.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.myIsDisposed">
            <summary>
            Disposed?
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.OptionStrict">
            <summary>
            Whether to throw on non-fatal logical errors.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.OptionParameterInfoBelow">
            <summary>
            Whether the default parameter info disposition is above or below the line.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.#ctor(JetBrains.TextControl.ITextControl)">
            <summary>
            Creates an instance, registers it in the list.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CreateLookupLayouter(JetBrains.UI.IAnchoringRect)">
            <summary>
            Creates a layouter for the lookup window.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CreateParameterInfoLayouter(JetBrains.UI.IAnchoringRect)">
            <summary>
            Creates a layouter for the text-editor-based parameter info window.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CreateLookupTooltipLayouter(JetBrains.UI.IAnchoringRect)">
            <summary>
            Creates a layouter for the lookup-list-based parameter info window.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.GetInstance(JetBrains.TextControl.ITextControl)">
            <summary>
            Either gets an existing instance, or creates a new one.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CreateLayouter(JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.Ids,JetBrains.UI.IAnchoringRect,System.Boolean)">
            <summary>
            Creates any of the layouters.
            </summary>
            <param name="id">Which layouter to create.</param>
            <param name="anchor">Anchor for the layouter.</param>
            <param name="bAllowNonStrictRecursion">With Option Strict OFF, sometimes the disposal of an already-used layouter causes the whole instance to dispose. In this case, make a recursive call over a new instance. This param prevents from infinite recursion.</param>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.GetAvailDispositions(JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.Ids)">
            <summary>
            Gets the dispositions that can be used for running each of the layouters.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.UpdateLayout">
            <summary>
            Recalculates the layout.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.DirtyHackLookupAndParameterInfoDispositions">
            <summary>
            Dirty Hack for the Parameter Info and Lookup tooltips.
            Initially, ParamInfo is displayed below the line, which occupies the space of the lookup window. As lookup shows, move param-info up.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.TryDispose">
            <summary>
            Checks whether there are no more layouters and the object can be disposed.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.Dispose">
            <summary>
            Disposes of all the resources.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.DisposeOfLayouter(JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.Ids)">
            <summary>
            The layouter has been disposed. Disconnect it from the instance.
            </summary>
            <param name="id">Layouter ID.</param>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.OnLayouterGottenDirty(System.Object,System.EventArgs)">
            <summary>
            One of the layouters requests to recalc the common layout.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.OnLayouterBeforeDispose(System.Object,System.EventArgs)">
            <summary>
            The layouter is about to dispose, unregister its data and possibly dispose of self.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.OnAnchorChanged(System.Object,System.EventArgs)">
            <summary>
            One of the anchors has changed.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.TextControls">
            <summary>
            Gets the collection of text controls, from which you should select the one you want the layouters for.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.TextControl">
            <summary>
            Gets the text controls instance for which the layouters can be created.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.Ids">
            <summary>
            IDs for the layouters and anchors.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.LayoutersForTextControls">
            <summary>
            Implements the <see cref="P:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.TextControls"/> property.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.LayoutersForTextControls.Item(JetBrains.TextControl.ITextControl)">
            <summary>
            Gets an object that will create the layouters for the given text control.
            Note: do not store the instance you get, because it may expire. You should get a new instance thru this indexer each time you need it.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter">
            <summary>
            A lightweight layouter interface implementor that delegates processing to the owning object.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.#ctor(JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.Ids,System.String)">
            <summary>
            Creates the instance, passes a couple purely diagnostyx fields.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.SetLayout(JetBrains.UI.LayoutResult)">
            <summary>
            Assigns a new layout.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.FireLayoutChanged">
            <summary>
            Fires the <see cref="E:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.LayoutChanged"/> event.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.FireBeforeDispose">
            <summary>
            Fires the <see cref="E:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.BeforeDispose"/> event.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.FireGottenDirty">
            <summary>
            Fires the <see cref="E:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.GottenDirty"/> event.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.PutData``1(JetBrains.Util.Key{``0},``0)">
            <summary>
            Stores given value by specified key.
            Use <code>PutData(key, null)</code> to remove the association.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.GetData``1(JetBrains.Util.Key{``0})">
            <summary>
            Retrieves value associated with given key.
            Returns null when no value is associated.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.GottenDirty">
            <summary>
            The instance has gotten dirty and the external layout manager must supply it with a new layout.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.Size">
            <summary>
            Gets or sets the size of the entity to be laid out.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.Layout">
            <summary>
            Gets the result of laying out the entity.
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.LookupAndParameterInfoLayouters.CoupledLayouter.LayoutChanged">
            <summary>
            Fires when the location changes.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemAnchoringRect">
            <summary>
            Tracks dynamically the currently selected item bounds within the given lookup window, in client coordinates.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemAnchoringRect.#ctor(JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookup)">
            <summary>
            Creates the instance.
            </summary>
            <param name="lookup">Lookup window whose selection to track.</param>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemAnchoringRect.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemAnchoringRect.UpdateAnchor">
            <summary>
            Updates the anchoring rectangle as it gets dirty.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupItemAnchoringRect.Lookup">
            <summary>
            The owning lookup window.
            May be <c>Null</c> if already disposed.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.MatchingBraceHighlighting.ISimpleMatchingBraceHighlightingProvider">
            <summary>
            Provides token-level information about matching braces
            </summary>
            <remarks>
            <see cref="T:System.Collections.Generic.IComparer`1"/> must be implemented according to the following rules:
            <list type="disc">
              <item>It is defined on brace pairs, result for open and close brace of the same pair is the same</item>
              <item>If one brace pair is "greater" than another that means that balance of "lesser" brace pair outside of "greater" brace pair doesn't count inside the "greater" brace pair</item>
            </list>
            </remarks>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.INavigationServiceProvider.GetBaseConstructor(JetBrains.ReSharper.Psi.IConstructor)">
            <summary>
            Get the base constructor call from given constructor
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.INavigationServiceProvider.GetCandidates(JetBrains.ReSharper.Psi.Resolve.IReference)">
            <summary>
            Return the candidates to go to declaration action
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.BindPolicy">
            <summary>
            Determines how to bind a lookup item
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.BindPolicy.OnlyIfType">
            <summary>
            Only if the item represents a type
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.BindPolicy.All">
            <summary>
            Bind any item
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.BindPolicy.Prefix">
            <summary>
            Bind only item prefix
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookup">
            <summary>
            Interface for creating lookup windows
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookup.DisposeWindow">
            <summary>
            Called by manager no notify window about closing
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookup.Solution">
            <summary>
            Solution the window is executed within
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookup.BeforeShownItemsUpdated">
            <summary>
            Event is raised before items list is shown
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookup.CurrentItemChanged">
            <summary>
            Event which is raised when the current item changes
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookup.ItemCompleted">
            <summary>
            Raised when an item is completed
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookup.Closed">
            <summary>
            Raised when the window is closed
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindowManager.IsExternalDocumentChangeAllowed">
            <summary>
            If this flag is set, any document change doesn't cancel code completion
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup">
            <summary>
            Form which is used to display list of lookup items
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.myOptions">
            <summary>
            Structure containing various options for look and feel of lookup window
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.myTextControl">
            <summary>
            The host text control
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.mySolution">
            <summary>
            Solution the window is executed within
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.myIsClosed">
            <summary>
            Flag indicating whether the form is closing
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.myHighlightingTracker">
            <summary>
            Highlighting tracker. Tracks ranges highlighting.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.myDataHolder">
            <summary>
            Holder to delegate user data holding actions to
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.myLookupItems">
            <summary>
            The complete list of lookup items
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.myCurrentItems">
            <summary>
            The list of current (filtered) lookup items
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.myContextTracker">
            <summary>
            The prefix tracker. Notifies on prefix changes.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.mySelectionEvaluator">
            <summary>
            The used preference manager
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.ItemCompleted">
            <summary>
            Raised when an item is completed
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.Solution">
            <summary>
            Solution the window is executed within
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.Lookup.CurrentItemChanged">
            <summary>
            Event which is raised when the current item changes
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupHighlightingTracker">
            <summary>
            Tracks replacement highlighting
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupOptions.DefaultLookupFont">
            <summary>
            Gets the editor font
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupPopupWindowContext">
            <summary>
            View for lookup window
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupUtil">
            <summary>
            Contains utility methods for lookup management
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupUtil.GetFilteredItems(System.Collections.Generic.IList{JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem},System.String,System.Boolean,System.Collections.Generic.IList{JetBrains.ReSharper.CodeInsight.Services.Lookup.ILookupItem})">
            <summary>
            Gets filtered items
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.LookupWindowManagerImpl">
            <summary>
            Manages currently shown lookup window
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Lookup.ContextTracker">
            <summary>
            Tracks keyboard commands and maintains prefix
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.Lookup.ContextTracker.ContextChanged">
            <summary>
            Event is raised when the tracker changes
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.MatchingBraceHighlighting.MatchingBraceHighlightingUtil.BracketMatchStack">
            <summary>
            Stack of different bracket types for finding matched one.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoProvider">
            <summary>
            Interface for creating parameter info handlers for different contexts
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoProvider.CreateLayouter">
            <summary>
            Gets position provider for the handler
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoProvider.CreatePopupWindowContext">
            <summary>
            Creates a popup window context.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoProvider.Context">
            <summary>
            Gets the current context provided by the handler.
            </summary>
            <value>
            The current context or <c>null</c> if the context is not available and session 
            is finished.
            </value>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoProvider.ContextChanged">
            <summary>
            Event which is raised when context changes
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoProvider.HideFlags">
            <summary>
            Gets flags indicating when to close the window
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.EditorParameterInfoHandler.myNextArrow">
            <summary>
            Handling of arrows while popu is shown
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.EditorParameterInfoHandler.mySolution">
            <summary>
            The solution in which we are
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.EditorParameterInfoHandler.myTextControl">
            <summary>
            The editor to use
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.EditorParameterInfoHandler.myContext">
            <summary>
            The current context
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.EditorParameterInfoHandler.myAlarm">
            <summary>
            The alarm to use
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.EditorParameterInfoHandler.myLBoundRangeMarker">
            <summary>
            Marker to the left bound
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.EditorParameterInfoHandler.myIsShownOnTop">
            <summary>
            True if parameter info is shown on top
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.EditorParameterInfoHandler.Context">
            <summary>
            Gets the context
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.EditorParameterInfoHandler.TextControl">
            <summary>
            Gets the editor
            </summary>
        </member>
        <member name="E:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.EditorParameterInfoHandler.ContextChanged">
            <summary>
            Event which is fired when context changes
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.InvocableControl">
            <summary>
            Once a control, nowdays it's only a renderer for a single signature from the <see cref="T:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoControl"/> form.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoHandlerFactory">
            <summary>
            A factory for instantiating parameter info handlers
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.TypeArgumentCandidate.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoControlBase.myWantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoControlBase.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            
            <returns>
            True if the window will not be activated when it is shown; otherwise, false. The default is false.
            </returns>
            
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoControlBase.WantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoPopupController">
            <summary>
            Interface for component which controls automatic parameter info popup
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoPopupController.PopupParameterInfo(JetBrains.ProjectModel.ISolution,JetBrains.TextControl.ITextControl,System.Int32,JetBrains.ReSharper.Psi.IDeclaredElement)">
            <summary>
            Shows parameter info in the specified text control with specified expected left parenthesis offset and highlights
            the specified signature
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.LookupParameterInfoHandler">
            <summary>
            Parameter info handler for lookup lists
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoContext.Argument">
            <summary>
            Argument under cursor
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoContext.NamedArguments">
            <summary>
            Each array element contains argument name (if argument is named) or null or empty otherwise.
            Length of the array equals to number of arguments or 0.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoContext.DefaultCandidate">
            <summary>
            Index of the candidate, that is resolved, -1 otherwise
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoContext.Candidates">
            <summary>
            Candidates available
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.IParameterInfoContext.Range">
            <summary>
            Invocation range. EndOffset == -1 if no right bound specified
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoAction">
            <summary>
            Action for showing parameter info in method calls (IDEA's Ctrl+P feature).
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoContextBase.FilterOut(System.Int32)">
            <summary>
            Filters out an invocation
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoContextBase.Argument">
            <summary>
            Gets number of parameter we're standing at
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoContextBase.Range">
            <summary>
            Gets the left parenthesis offset
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoPopupControllerImpl">
            <summary>
            Controls autopopup for parameter info
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.SelectEmbracingConstruct.Impl.DotSelection.GetParentInternal(JetBrains.ReSharper.Psi.Tree.ITokenNode)">
            <summary>
            Implements special processing of some tokens
            </summary>
            <param name="tokenNode"></param>
            <returns>null, if no special processing required</returns>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Util.ActionUtil.CommitAndWaitForCaches(JetBrains.ReSharper.Psi.PsiManager,JetBrains.ActionManagement.IActionHandler)">
            <summary>
            When a PSI-consuming action is about to be executed, commits the documents and waits for the caches to become idle, displaying the cancelable modal UI progress.
            </summary>
            <param name="manager">PSI manager to wait for, identifies the solution.</param>
            <param name="actionhandler">Action handler from which the action name is retrieved, to display in the progress UI.</param>
            <returns>Whether the caches are, finally, idle (the wait might be cancelled).</returns>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Util.CodeInsightUtil">
            <summary>
            Contains utility methods for code insight features
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.CamelTyping.FilteringPrefixMatcher">
            <summary>
            A preofix matcher that features an additional freehand filter not based on the regex.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.CamelTyping.FilteringPrefixMatcher.Matcher">
            <summary>
            Gets the underlying matcher.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.CodeCleanupModuleAttribute.ModulesBefore">
            <summary>
            Modules which should precede this
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.CodeCleanupModuleAttribute.ModulesAfter">
            <summary>
            Modules which shoud follow this
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.ICodeCleanupModule.SetDefaultSetting(JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.CodeCleanupProfile,JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.CodeCleanup.DefaultProfileType)">
            <summary>
            Get default setting for given profile type
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.ICodeCleanupModule.IsAvailable(JetBrains.ProjectModel.IProjectFile)">
            <summary>
            Check if this module can handle given project file
            </summary>
            <param name="projectFile"></param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.ICodeCleanupModule.Process(JetBrains.ProjectModel.IProjectFile,JetBrains.ReSharper.Psi.IPsiRangeMarker,JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.CodeCleanupProfile,System.Boolean@,JetBrains.Application.Progress.IProgressIndicator)">
            <summary>
            Process clean-up on file. if <paramref name="range"/> is <see cref="F:JetBrains.DocumentModel.DocumentRange.InvalidRange"/>, then process the whole file
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.ICodeCleanupModule.LanguageType">
            <summary>
            Get the language this module can operate
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.ICodeCleanupModule.Descriptors">
            <summary>
            Get the collection of option descriptors
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.ICodeCleanupModule.IsAvailableOnSelection">
            <summary>
            Check if this module is available on selection, or on the whole file
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.CodeCleanup.CodeCleanup.myRecentlyLoadedProfiles">
            <summary>
            Need to memorize recently loaded profile XML, since not all modules couls be presebt while loading XML
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.CodeCompletion.ICodeCompletionHost.InvokeHostCodeCompletion">
            <summary>
            Invokes host completion in active text control
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorOption.GetPossibleValues">
            <summary>
            Gets possible values for given output element in the given context
            </summary>
            <returns>List of possible values for combobox</returns>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorOption.IsValidValue(System.String)">
            <summary>
            Gets possible values for given output element in the given context
            </summary>
            <returns>List of possible values for combobox</returns>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorOption.ID">
            <summary>
            Option identity
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorOption.Title">
            <summary>
            Title text
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorOption.Kind">
            <summary>
            UI presention kind
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorOption.Persist">
            <summary>
            Indicates if value should be saved across generate sessions
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorOption.Value">
            <summary>
            Value for this option
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorOption.OverridesGlobalOption">
            <summary>
            Global option value does not propagate to this option
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorOption.HasDependentOptions">
            <summary>
            If this property is true, options are refreshed on change
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext">
            <summary>
            Context in which generation occures
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext.Kind">
            <summary>
            Gets context kind, like constructor, property, delegating members, etc
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext.Language">
            <summary>
            Language in which generation should occur
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext.Root">
            <summary>
            Root of the operation, usually ITypeDeclaration
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext.Anchor">
            <summary>
            Anchor of the operation, place where to put elements
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext.ProvidedElements">
            <summary>
            Elements provided as possible sources for generation (shown on first page)
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext.InputElements">
            <summary>
            Elements selected by user as source of generation
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext.OutputElements">
            <summary>
            Elements built by builder
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext.GlobalOptions">
            <summary>
            Options configured on Element Selection page, which will be applied to every suitable element. This options are persisted.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext.InputElementOptions">
            <summary>
            Options configured on Advanced page per input element. This options are not persisted.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext.OutputElementOptions">
            <summary>
            Options configured on Advanced page per output element. This options are not persisted.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext.Project">
            <summary>
            Project in which generation occures
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorBuilder">
            <summary>
            Modifies context  
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorOptionsProvider">
            <summary>
            Provides options for user
            </summary>
            <remarks>
            Global options are displayed on first page and applies to every element (or is default value)
            Element options are specific settings for each elements, available on Advanced page
            </remarks>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorBuilder.IsAvaliable(JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext)">
            <summary>
            Checks if this builder will produce any output in the specified context
            </summary>
            <param name="context">Context</param>
            <returns>true if builder can work with context, false otherwise</returns>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorBuilder.Process(JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext)">
            <summary>
            Runs on context and modifies PSI
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorBuilder.HasProcessableElements(JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext,System.Collections.Generic.IEnumerable{JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorElement})">
            <summary>
            Tells if builder will produce any output elements
            </summary>
            <param name="context"></param>
            <param name="elements"></param>
            <returns>true if elements will be produced, false otherwise</returns>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorElementProvider">
            <summary>
            Provides elements 
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorElementProvider.Populate(JetBrains.ReSharper.CodeInsight.Services.Generate2.IGeneratorContext)">
            <summary>
            Collects elements for builder
            </summary>
            <returns></returns>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate.CheckBoxAttribute">
            <summary>
            Property marked with this attribute should have <see cref="T:System.Boolean"/> return type.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate.CheckBoxInitialStateAttribute">
            <summary>
            Property marked with this attribute should have <see cref="T:JetBrains.ReSharper.CodeInsight.Services.Generate.CheckBoxInitialState"/> return type.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate.ColumnAttribute">
            <summary>
            Method marked with this attribute should have 
            return type bool
            first parameter of type <see cref="T:System.Converter`2"/>
            and second parameter able to receive specific implementation of <see cref="T:JetBrains.ReSharper.CodeInsight.Services.Generate.IGeneratePage"/>.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate.ComboAttribute">
            <summary>
            Property marked with this attribute should have 
            <see cref="T:System.Array"/> of <see cref="T:System.String"/> return type.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate.ComboSelectionAttribute">
            <summary>
            Property marked with this attribute should have <see cref="T:System.Int32"/> return type.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate.HierarchyAttribute">
            <summary>
            Property marked with this attribute should have <see cref="T:System.Collections.Generic.IList`1"/>
            return type.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate.HierarchyPresenterAttribute">
            <summary>
            Property marked with this attribute should have 
            <see cref="T:JetBrains.ReSharper.CodeInsight.Services.Generate.Util.HierarchyPresenter"/>
            return type.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate.HierarchySelectionAttribute">
            <summary>
            Property marked with this attribute should have <see cref="T:System.Collections.Generic.IList`1"/>
            return type.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate.RadioAttribute">
            <summary>
            Property marked with this attribute should have 
            <see cref="T:System.Array"/> of <see cref="T:System.String"/> return type.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.Generate.RadioSelectionAttribute">
            <summary>
            Property marked with this attribute should have <see cref="T:System.Int32"/> return type.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.Lookup.Suffix.Playback(JetBrains.TextControl.ITextControl)">
            <summary>
            Emulates typing of the suffix in given text control
            </summary>
            <param name="textControl"></param>
        </member>
        <member name="P:JetBrains.ReSharper.CodeInsight.Services.Lookup.TestLookupWindowManager.TestLookupWindow.Handle">
            <summary>
            Gets the handle to the window represented by the implementer.
            </summary>
            
            <returns>
            A handle to the window represented by the implementer.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.NamingUI.EditPredefinedRuleForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.NamingUI.EditPredefinedRuleForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.NamingUI.EditPredefinedRuleForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoSettings">
            <summary>
            Interface for component which controls automatic parameter info popup
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoSettings.ShowOneCandidate">
            <summary>
            Gets or sets flag indicating whether show one candidatein the popup or all.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoSettings.DelegatesAsLambdas">
            <summary>
            Gets or sets flag indicating whether show one candidatein the popup or all.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoSettings.UseArrowsForSignatureNavigation">
            <summary>
            Gets or sets flag indicating whether use arrows instead of Control+P in parameter info popup.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoSettings.AutopopupOn">
            <summary>
            Gets or sets flag indicating whether automatic parameter info popup is enabled.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ParameterInfo.ParameterInfoSettings.AutopopupDelay">
            <summary>
            Gets or sets delay to automatically show parameter info popup in.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.QuickDoc.IXmlDocHeaderPresenter.Present(JetBrains.ReSharper.Psi.IDeclaredElement,JetBrains.ProjectModel.IModule)">
            <summary>
            Presents the declared element as a header for HTML quick doc
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.CodeInsight.Services.ScopeSelector.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.ScopeSelector.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.ScopeSelector.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.TypingAssist.BracketMatcher.FindMatchingBracket(JetBrains.ReSharper.Psi.Parsing.CachingLexer,System.Int32@)">
            <summary>
            Try to find the corresponding matching bracket for the given
            </summary>
            <param name="cachingLexer">Caching lexer positioned at the source bracket</param>
            <param name="pos">position of paired bracket (or -1 if none)</param>
            <returns>true if matching bracket was found. If returns false, the pos may contain position of incorrect bracket</returns>
        </member>
        <member name="T:JetBrains.ReSharper.CodeInsight.Services.src.Util.CodeInsightPropertyValidator">
            <summary>
            Performs validation of <see cref="T:JetBrains.DataFlow.IProperty`1"/> in the aspect of valid language names, and such.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.src.Util.CodeInsightPropertyValidator.CreateNewNameValidator(JetBrains.DataFlow.IProperty{System.String},JetBrains.ReSharper.Psi.IElementPointer{JetBrains.ReSharper.Psi.IDeclaredElement},System.String)">
            <summary>
            Checks whether the string property value is a valid new name for an identifier.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.src.Util.CodeInsightPropertyValidator.CreateNewNameValidator(JetBrains.DataFlow.IProperty{System.String},JetBrains.ReSharper.Psi.IDeclaredElement,System.String)">
            <summary>
            Checks whether the string property value is a valid new name for an identifier.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.CodeInsight.Services.src.Util.CodeInsightPropertyValidator.CreateNewNameValidator(JetBrains.DataFlow.IProperty{System.String},JetBrains.ReSharper.Psi.PsiLanguageType,System.String)">
            <summary>
            Checks whether the string property value is a valid new name for an identifier.
            </summary>
        </member>
    </members>
</doc>
