<?xml version="1.0"?>
<project name="PHydrate" default="buildLibrary" basedir=".">
	<description>Builds the PHydrate libraries</description>

	<loadtasks assembly="tools/nantcontrib/bin/NAnt.Contrib.Tasks.dll" />

	<!-- Property definitions -->
	<property name="build.debug" value="false" overwrite="false" />
	<property name="build.configuration" value="release" overwrite="false" />
	<property name="build.optimize" value="${if (build.configuration == 'release', 'true', 'false')}" overwrite="false" />
	<property name="outputdir" value="Build/${build.configuration}" overwrite="false" />

	<assemblyfileset id="test.assemblies" />

	<assemblyfileset id="test.dependencies">
		<lib>
			<include name="lib/*" />
			<include name="lib/SQLite/bin" />
			<include name="${outputdir}" />
		</lib>
		<include name="UMMO.TestingUtils.dll" />
		<include name="Machine.Specifications.dll" />
		<include name="Rhino.Mocks.dll" />
		<include name="System.Data.SQLite.dll" />
		<include name="PHydrate.dll" />
	</assemblyfileset>

	<target name="clean" description="Remove all generated files">
		<delete dir="Build/${build.configuration}" />
	</target>
	
	<target name="makeOutputFolder" description="Create the output folder">
		<if test="${not directory::exists(outputdir)}">
			<echo message="Creating Build directory..." />
			<mkdir dir="${outputdir}" />
		</if>
	</target>

	<target name="buildLibrary" depends="makeOutputFolder" description="Build UMMO">
		<echo message="Building PHydrate.dll..." />
		<csc doc="${outputdir}/PHydrate.xml" optimize="${build.optimize}" output="${outputdir}/PHydrate.dll" target="library">
			<sources>
				<include name="src/PHydrate/**/*.cs" />
			</sources>
		</csc>
	</target>

	<target name="buildTests" depends="buildLibrary" description="Build the test assemblies">
		<echo message="Building PHydrate.Specs.dll..." />

		<csc output="${outputdir}/PHydrate.Specs.dll" target="library">
			<sources>
				<include name="src/PHydrate.Specs/**/*.cs" />
			</sources>
			<references refid="test.dependencies" />
		</csc>

		<echo message="Building PHydrate.Tests.Integration.dll..." />

		<csc output="${outputdir}/PHydrate.Tests.Integration.dll" target="library">
			<sources>
				<include name="src/PHydrate.Tests.Integration/**/*.cs" />
			</sources>
			<references refid="test.dependencies" />
		</csc>

		<copy todir="${outputdir}" flatten="true">
			<fileset refid="test.dependencies" />
		</copy>

		<copy todir="${outputdir}" flatten="true">
			<fileset>
				<include name="src/PHydrate.Tests.Integration/IntegrationTestDb.sqlite" />
			</fileset>
		</copy>

		<assemblyfileset id="test.assemblies">
			<include name="${outputdir}/*.Specs.dll" />
			<include name="${outputdir}/*.Tests.*.dll" />
		</assemblyfileset>
	</target>
	
	<target name="test" depends="buildTests" description="Execute unit tests">
		<property name="test.folder" value="${path::combine(outputdir, 'results')}" overwrite="true" />
		<if test="${not directory::exists(test.folder)}">
			<echo message="Creating test results directory..." />
			<mkdir dir="${test.folder}" />
		</if>
		<!-- TODO: Get the mspec task from nant-extensions and use that. -->
		<exec program="lib/Machine.Specifications/mspec.exe">
			<arg value="--html"/><arg value="${test.folder}" />
			<arg line="${fileset::to-string('test.assemblies', ' ')}"/>
		</exec>
	</target>

	<target name="distro" depends="buildLibrary">
		<echo message="Creating zip file..." />
		<zip zipfile="${outputdir}/PHydrate-${build.configuration}.zip">
			<fileset basedir="${outputdir}">
				<include name="*.xml" />
				<include name="*.dll" />
				<exclude name="*.Specs.dll" />
			</fileset>
		</zip>
	</target>
</project>
