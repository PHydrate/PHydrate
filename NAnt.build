<?xml version="1.0"?>
<project name="PHydrate" default="buildLibrary" basedir=".">
	<description>Builds the PHydrate libraries</description>


	<!-- Property definitions -->
	<property name="build.cwd" value="${directory::get-current-directory()}" overwrite="true" />
	<property name="build.debug" value="false" overwrite="false" />
	<property name="build.configuration" value="${if (build.debug == 'true', 'debug', 'release')}" overwrite="true" />
	<property name="build.outputdir" value="${path::combine('Build', build.configuration)}" overwrite="false" />
	<property name="build.optimize" value="${if (build.configuration == 'release', 'true', 'false')}" overwrite="false" />
	<property name="build.framework" value="v3.5" overwrite="false" />
	<property name="bin.dir" value="${path::combine(build.cwd, build.outputdir)}" overwrite="true" />
	<property name="doc.dir" value="${path::combine(build.cwd, 'doc')}" overwrite="true" />
	<property name="tools.dir" value="${path::combine(build.cwd, 'tools')}" overwrite="true" />
	<property name="package.nuget.dir" value="${path::combine(build.cwd, 'nuget')}" overwrite="false" />

	<loadtasks>
		<fileset>
			<include name="${build.cwd}/tools/nantcontrib/bin/NAnt.Contrib.Tasks.dll" />
		</fileset>
	</loadtasks>

	<assemblyfileset id="test.assemblies" />

	<target name="clean" description="Remove all generated files">
		<call target="clean.bin" />
		<delete dir="${package.nuget.dir}" />
	</target>
	
	<target name="clean.bin">
		<delete dir="${bin.dir}" />
		<delete>
			<fileset>
				<include name="src/**/bin/**/*" />
				<include name="src/**/obj/**/*" />
			</fileset>
		</delete>
	</target>
	
	<target name="makeOutputFolder" description="Create the output folder">
		<if test="${not directory::exists(bin.dir)}">
			<echo message="Creating Build directory..." />
			<mkdir dir="${bin.dir}" />
		</if>
	</target>

	<target name="buildLibrary" depends="makeOutputFolder" description="Build PHydrate">
		<echo message="Building PHydrate.dll..." />
		<property name="build.constants" value="" overwrite="true" />
		<if test="${build.framework == 'v4.0'}">
			<property name="build.constants" value="${build.constants}NET40;" overwrite="true" />
		</if>
		<msbuild project="${build.cwd}/src/PHydrate/PHydrate.csproj">
			<property name="Configuration" value="${build.configuration}" />
			<property name="OutputPath" value="${bin.dir}" />
			<property name="TargetFrameworkVersion" value="${build.framework}" />
			<property name="DefineConstants" value="${build.constants}" />
		</msbuild>
	</target>

	<target name="buildTests" depends="buildLibrary" description="Build the test assemblies">
		<echo message="Building PHydrate.Specs.dll..." />
		<msbuild project="${build.cwd}/src/PHydrate.Specs/PHydrate.Specs.csproj">
			<property name="Configuration" value="${build.configuration}" />
			<property name="OutputPath" value="${bin.dir}" />
			<property name="TargetFrameworkVersion" value="${build.framework}" />
		</msbuild>

		<echo message="Building PHydrate.Tests.Integration.dll..." />
		<msbuild project="${build.cwd}/src/PHydrate.Tests.Integration/PHydrate.Tests.Integration.csproj">
			<property name="OutputPath" value="${bin.dir}" />
			<property name="Configuration" value="${build.configuration}" />
			<property name="TargetFrameworkVersion" value="${build.framework}" />
		</msbuild>

		<echo message="Copying Integration Test Database..." />
		<copy todir="${bin.dir}" flatten="true">
			<fileset>
				<include name="src/PHydrate.Tests.Integration/IntegrationTestDb.sqlite" />
			</fileset>
		</copy>

		<assemblyfileset id="test.assemblies">
			<include name="${bin.dir}/*.Specs.dll" />
			<include name="${bin.dir}/*.Tests.*.dll" />
		</assemblyfileset>
	</target>
	
	<target name="test" depends="buildTests" description="Execute unit tests">
		<property name="test.dir" value="${path::combine(bin.dir, 'results')}" overwrite="true" />
		<if test="${not directory::exists(test.dir)}">
			<echo message="Creating test results directory..." />
			<mkdir dir="${test.dir}" />
		</if>
		<!-- TODO: Get the mspec task from nant-extensions and use that. -->
		<exec program="lib/Machine.Specifications/mspec.exe">
			<arg value="--html"/><arg value="${test.dir}" />
			<arg line="${fileset::to-string('test.assemblies', ' ')}"/>
		</exec>
	</target>

	<target name="buildDocs" depends="buildLibrary">
		<echo message="Building .chm documentation..." />
		<msbuild project="${doc.dir}/PHydrate.shfbproj" />
	</target>

	<target name="distro" depends="buildLibrary,buildDocs">
		<echo message="Creating zip file..." />
		<zip zipfile="${bin.dir}/PHydrate-${build.configuration}.zip">
			<fileset basedir="${bin.dir}">
				<include name="*.xml" />
				<include name="*.dll" />
				<exclude name="*.Specs.dll" />
				<exclude name="*.Tests.*.dll" />
			</fileset>
			<fileset basedir="${doc.dir}/Help">
				<include name="*.chm" />
			</fileset>
		</zip>
	</target>
	
	<target name="stage_nuget" depends="clean">
		<fileset id="nuget.assemblies" basedir="${bin.dir}">
			<include name="PHydrate.dll" />
			<include name="PHydrate.xml" />
		</fileset>
		<fileset id="nuget.help" basedir="${doc.dir}">
			<include name="PHydrate.chm" />
		</fileset>
		<echo message="Creating package folder..." />
		<mkdir dir="${package.nuget.dir}" />
		<property name="package.nuget.dir.lib" value="${path::combine(package.nuget.dir, 'lib')}" overwrite="true" />
		<property name="package.nuget.dir.net35" value="${path::combine(package.nuget.dir.lib, 'net35')}" overwrite="true" />
		<property name="package.nuget.dir.net40" value="${path::combine(package.nuget.dir.lib, 'net40')}" overwrite="true" />
		<property name="package.nuget.dir.content" value="${path::combine(package.nuget.dir, 'content')}" overwrite="true" />
		<mkdir dir="${package.nuget.dir.lib}" />
		<mkdir dir="${package.nuget.dir.net35}" />
		<echo message="Building .NET 3.5 library..." />
		<property name="build.framework" value="v3.5" overwrite="true" />
		<call target="buildLibrary" />
		<copy todir="${package.nuget.dir.net35}">
			<fileset refid="nuget.assemblies" />
		</copy>
		<echo message="Building .NET 4.0 library..." />
		<property name="build.framework" value="v4.0" overwrite="true" />
		<call target="clean.bin" />
		<call target="buildLibrary" />
		<call target="buildDocs" />
		<copy todir="${package.nuget.dir.net40}">
			<fileset refid="nuget.assemblies" />
		</copy>
		<copy todir="${package.nuget.dir.content}">
			<fileset refid="nuget.help" />
		</copy>
	</target>
	
	<target name="package_nuget" depends="stage_nuget">
		<echo message="Building NuGet package..." />
		<exec program="nuget.exe" basedir="${path::combine(tools.dir, 'nuget')}" workingdir="${build.cwd}">
			<arg value="pack" />
			<arg file="${build.cwd}/PHydrate.nuspec" />
		</exec>
	</target>
</project>
